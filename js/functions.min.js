/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/functions.js":
/*!*************************!*\
  !*** ./js/functions.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var overlay = (function () {\n    var overlayElement = document.createElement(\"div\");\n    overlayElement.classList.add(\"mr-overlay\");\n    // overlayElement.addEventListener(\"click\", toggleOverlay);\n\n    function toggleOverlay() {\n        if (document.querySelector(\".mr-overlay\")) {\n            document.querySelector(\".mr-overlay\").remove();\n            // menu.toggleMenu(overlayElement);\n        } else {\n            document.body.appendChild(overlayElement);\n        }\n    }\n\n    return {\n        toggleOverlay: toggleOverlay,\n    };\n})();\n\nvar menu = (function () {\n    var toggleMobileMenuBtns = document.querySelectorAll(\".js-toggle-mobile-menu\");\n    var mobileMenu = document.querySelector(\".js-mobile-menu\");\n\n    var primaryMenu = document.querySelector(\".primary-menu\");\n    var subMenus = primaryMenu.querySelectorAll(\".menu-item-has-children > ul.sub-menu\");\n    var subMenuBtns = primaryMenu.querySelectorAll(\".menu-item-has-children > a\");\n\n    var primaryMenuMobile = document.querySelector(\".primary-menu-mobile\");\n    var mobileSubMenus = primaryMenuMobile.querySelectorAll(\n        \".menu-item-has-children > ul.sub-menu\"\n    );\n    var mobileSubMenuBtns = primaryMenuMobile.querySelectorAll(\".menu-item-has-children > a\");\n\n    for (i = 0; i < toggleMobileMenuBtns.length; i++) {\n        toggleMobileMenuBtns[i].addEventListener(\"click\", toggleMobileMenu);\n    }\n    // Set subMenu attributes\n    for (l = 0; l < subMenus.length; l++) {\n        subMenus[l].setAttribute(\"aria-hidden\", \"true\");\n    }\n    for (m = 0; m < mobileSubMenus.length; m++) {\n        mobileSubMenus[m].setAttribute(\"aria-hidden\", \"true\");\n    }\n    for (j = 0; j < subMenuBtns.length; j++) {\n        subMenuBtns[j].addEventListener(\"click\", toggleSubMenu);\n    }\n    for (k = 0; k < mobileSubMenuBtns.length; k++) {\n        mobileSubMenuBtns[k].addEventListener(\"click\", toggleSubMenu);\n        // If sub page is active, open and show sub menu\n        if (\n            mobileSubMenuBtns[k].parentElement.classList.contains(\"current-menu-ancestor\") ||\n            mobileSubMenuBtns[k].parentElement.classList.contains(\"current-menu-parent\") ||\n            mobileSubMenuBtns[k].parentElement.classList.contains(\"current-menu-item\")\n        ) {\n            var subMenu = mobileSubMenuBtns[k].parentElement.querySelector(\".sub-menu\");\n\n            mobileSubMenuBtns[k].classList.add(\"open-toggle\");\n            subMenu.classList.add(\"open\");\n            if (subMenu.style.maxHeight) {\n                subMenu.style.maxHeight = null;\n            } else {\n                subMenu.style.maxHeight = subMenu.scrollHeight + \"px\";\n            }\n        }\n    }\n\n    // Hide mobile menu and overlay on resize > 600\n    window.addEventListener(\"resize\", function (e) {\n        if (document.body.clientWidth >= 600 && mobileMenu.classList.contains(\"active\")) {\n            toggleMobileMenu(e);\n        }\n    });\n\n    function toggleMobileMenu(e) {\n        e.preventDefault();\n        var ariaHidden = mobileMenu.getAttribute(\"aria-hidden\") === \"true\" || false;\n        overlay.toggleOverlay();\n        mobileMenu.classList.toggle(\"active\");\n        mobileMenu.setAttribute(\"aria-hidden\", !ariaHidden);\n    }\n    function toggleSubMenu(e) {\n        e.preventDefault();\n        var subMenu = e.target.parentElement.querySelector(\".sub-menu\");\n        var expanded = e.target.getAttribute(\"aria-expanded\") === \"true\" || false;\n        var ariaHidden = subMenu.getAttribute(\"aria-hidden\") === \"true\" || false;\n        e.target.classList.toggle(\"open-toggle\");\n        e.target.setAttribute(\"aria-expanded\", !expanded);\n        subMenu.classList.toggle(\"open\");\n        subMenu.setAttribute(\"aria-hidden\", !ariaHidden);\n        console.log(expanded);\n\n        if (subMenu.style.maxHeight) {\n            subMenu.style.maxHeight = null;\n        } else {\n            subMenu.style.maxHeight = subMenu.scrollHeight + \"px\";\n        }\n    }\n\n    return {\n        toggleMobileMenu: toggleMobileMenu,\n    };\n})();\n\nvar modals = (function () {\n    var modalTriggers = document.querySelectorAll(\".js-modal-trigger\");\n    var modalCloseBtns = document.querySelectorAll(\".js-modal-close\");\n\n    for (i = 0; i < modalTriggers.length; i++) {\n        modalTriggers[i].addEventListener(\"click\", toggleModal);\n    }\n    for (j = 0; j < modalCloseBtns.length; j++) {\n        modalCloseBtns[j].addEventListener(\"click\", toggleModal);\n    }\n\n    function toggleModal(e) {\n        e.preventDefault();\n        var modalTarget = document.querySelector(\"#\" + e.target.getAttribute(\"data-modal-trigger\"));\n        modalTarget.classList.toggle(\"active\");\n        if (modalTarget.classList.contains(\"active\")) {\n            // Reinit swipers if they're inside modals.\n            swipers.init();\n        }\n        overlay.toggleOverlay();\n    }\n})();\n\n\n//# sourceURL=webpack:///./js/functions.js?");

/***/ }),

/***/ 0:
/*!*******************************!*\
  !*** multi ./js/functions.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./js/functions.js */\"./js/functions.js\");\n\n\n//# sourceURL=webpack:///multi_./js/functions.js?");

/***/ })

/******/ });